# Project template
- layout: left
  name: LSM-based Tuple Compaction Framework
  # link: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  figure: images/storage.png 
  # quote: >
  description: | # this will include new lines to allow paragraphs
    We proposed a new mechanism to leverage LSM-lifecycle events to infer the
    schema and semantically compact self-describing semi-structured records
    automatically. We also introduced a novel semi-structured record physical
    format for efficient construction and compaction. Using Apache AsterixDB, we
    were able (combined with our implementation of page-level compression) to
    reduce the storage size by 9.8x and improve the query performance by the same
    factor. \\
    **Paper**: _[Extended version in arXiv](https://arxiv.org/abs/1910.08185)_

# Project template
- layout: left
  name: Columnar Formats for Schemaless LSM-based Document Stores
 
  # link: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  figure: images/amax.png 
  # quote: >
  description: | # this will include new lines to allow paragraphs
    In this project, we propose several techniques based on piggy-backing on Log-Structured 
    Merge (LSM) tree events and tailored to document stores to store document data in a 
    columnar layout. We first extend the _**[Dremel format](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36632.pdf)**_, a popular on-disk columnar format 
    for semi-structured data, to comply with document stores' flexible data model. 
    We then introduce two columnar layouts for organizing and storing data in LSM-based storage.\\
    **Paper**: _[Extended version in arXiv](https://arxiv.org/abs/2111.11517)_

  # Project template
- layout: left
  name: A Code Generation Technique for Schema-on-read Databases using Truffle
 
  # link: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
  # github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  figure: images/code_gen.png 
  # quote: >
  description: | # this will include new lines to allow paragraphs
    In this project, We shed light on the possibility of using query compilation techniques
    for document stores, where value types are not known until runtime. We utilize the _**[Oracle 
    Truffle](https://github.com/oracle/graal/tree/master/truffle)**_ to implement an internal language for processing data stored in a Java-based 
    document store. Even though we only translate part of a query plan, our evaluations show 
    a tremendous improvement over AsterixDBâ€™s Vectorized model (or batch-at-a-time model).